name: Docker & EC2 CI CD

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
env:
  DOCKER_IMAGE_NAME: devraul/iplease-ip-manage-server
  DOCKER_CONTAINER_NAME: ip-manage-server
  DOCKER_CONTAINER_PORT: 12100
  DOCKER_FORWARD_PORT: 12100
  
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    # setup java
    - name: setup JDK 17
      uses: actions/setup-java@v2
      with: 
        java-version: '17'
        distribution: 'adopt'
    # prepare execute  
    - name: grant execute permission to gradlew
      run: chmod +x gradlew
    # test
    - name: test with gradle
      env: 
        DOCKER_SERVER_PORT: ${DOCKER_CONTAINER_PORT}
        DOCKER_SERVER_IP: ${{ secrets.DOCKER_IP }}
        EUREKA_HOSTNAME: ${{ secrets.EUREKA_IP }}
        EUREKA_PORT: ${{ secrets.EUREKA_PORT }}
        MQ_HOSTNAME: ${{ secrets.MQ_IP }}
        MQ_PORT: ${{ secrets.MQ_PORT }}
        MQ_USERNAME: ${{ secrets.MQ_USERNAME }}
        MQ_PASSWORD: ${{ secrets.MQ_PASSWORD }}
        GIT_REPO_URL: ${{ secrets.GIT_REPO_URL }}
        GIT_ID: ${{ secrets.CONFIG_GIT_ID }}
        GIT_PERSONAL_ACCESS_TOKEN: ${{ secrets.GIT_PERSONAL_ACCESS_TOKEN }}
        ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
      run: ./gradlew test
    # build
    - name: build with gradle
      run: ./gradlew build -x test
    - name: login to docker
      run: sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: build docker image
      run: sudo docker build --tag ${DOCKER_IMAGE_NAME}:${GITHUB_RUN_ID} .
    - name: push docker image
      run: sudo docker push ${DOCKER_IMAGE_NAME}:${GITHUB_RUN_ID}
  cd:
    if: github.event.pull_request.merged == 'true'
    runs-on: [ self-hosted, iplease-ip-manage ]
    needs: ci
    steps: 
      - uses: actions/checkout@v3
      - name: login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      # setup java
      - name: setup JDK 17
        uses: actions/setup-java@v2
        with: 
          java-version: '17'
          distribution: 'adopt'
      - name: login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: pull image from docker
        run: sudo docker pull ${DOCKER_IMAGE_NAME}:${GITHUB_RUN_ID}
      - name: run docker container from image
        run: |
          docker stop ${DOCKER_CONTAINER_NAME} && docker rm ${DOCKER_CONTAINER_NAME}
          docker run -d -p ${DOCKER_FORWARD_PORT}:${DOCKER_CONTAINER_PORT} \
          --env-file=${{ secrets.DOCKER_ENV_FILE_PATH }} \
          --network ${{ secrets.DOCKER_NETWORK }} \
          --ip ${{ secrets.DOCKER_IP }} \
          --name ${DOCKER_CONTAINER_NAME} \
          --restart always \
          ${DOCKER_IMAGE_NAME}:${GITHUB_RUN_ID}
